
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class informationAdd extends javax.swing.JFrame {

    /**
     * Creates new form informationAdd
     */
    public informationAdd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        productComboBox = new javax.swing.JComboBox<>();
        productSearchBtn = new javax.swing.JButton();
        priceSearch = new javax.swing.JTextField();
        priceSearchBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        MradioBtn = new javax.swing.JRadioButton();
        FradioBtn = new javax.swing.JRadioButton();
        pushUpBox = new javax.swing.JCheckBox();
        dumbBellBox = new javax.swing.JCheckBox();
        benchPressBox = new javax.swing.JCheckBox();
        deadLiftBox = new javax.swing.JCheckBox();
        trainingComboBox = new javax.swing.JComboBox<>();
        timeTxt = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        saunaBox = new javax.swing.JCheckBox();
        tradeMillBox = new javax.swing.JCheckBox();
        barBellBox = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        guideMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Information and Registration");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(153, 153, 153));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"David Gurung", "Male", "Medium Training", "Push up, Dumbbell, Squat",  new Integer(30),  new Integer(1000)},
                {"Rabina Thapa", "Female", "Light Training", "Pull up, Barbell",  new Integer(40),  new Integer(4000)},
                {"Kishor karki", "Male", "Heavy Training", "Bench press, Wrightlifting, Dead lift",  new Integer(60),  new Integer(2000)},
                {"Hira KC", "Female", "Stamina Training", "Trademill",  new Integer(20),  new Integer(5000)},
                {"Rupesh Shahi", "Male", "SPA", "Steam bath, Sauna",  new Integer(70),  new Integer(3000)},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "Training Session", "Products", "Time", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionForeground(new java.awt.Color(153, 0, 0));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 220));

        jPanel4.setBackground(new java.awt.Color(236, 176, 176));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Light Training", "Medium Training", "Heavy Training", "Stamina Training", "SPA" }));
        productComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboBoxActionPerformed(evt);
            }
        });
        jPanel4.add(productComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 140, 30));

        productSearchBtn.setText("Search Detail");
        productSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productSearchBtnActionPerformed(evt);
            }
        });
        jPanel4.add(productSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 180, 80));

        priceSearch.setBackground(new java.awt.Color(204, 204, 204));
        priceSearch.setText("price");
        priceSearch.setToolTipText("");
        priceSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceSearchFocusLost(evt);
            }
        });
        priceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchActionPerformed(evt);
            }
        });
        priceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceSearchKeyPressed(evt);
            }
        });
        jPanel2.add(priceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 220, 90, 30));

        priceSearchBtn.setText("Search Accessories");
        priceSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchBtnActionPerformed(evt);
            }
        });
        jPanel2.add(priceSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 260, -1, -1));

        jLabel4.setText("Gender");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 64, 70, -1));

        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 30));

        jPanel5.setBackground(new java.awt.Color(178, 188, 219));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 220, 140, 70));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Full Name");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 25, 60, -1));

        jLabel6.setText("Gender");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 64, 70, -1));

        jLabel7.setText("Products");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 143, 48, 20));

        jLabel8.setText("Training Session");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel9.setText("Time");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 54, 30));

        jLabel10.setText("Price");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 50, 20));

        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });
        nameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTxtKeyPressed(evt);
            }
        });
        jPanel3.add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 22, 180, -1));

        buttonGroup1.add(MradioBtn);
        MradioBtn.setText("Male");
        MradioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MradioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(MradioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        buttonGroup1.add(FradioBtn);
        FradioBtn.setText("Female");
        FradioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FradioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(FradioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        pushUpBox.setText("Push up");
        pushUpBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pushUpBoxMouseClicked(evt);
            }
        });
        jPanel3.add(pushUpBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 79, -1));

        dumbBellBox.setText("Dumbbell");
        jPanel3.add(dumbBellBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 79, -1));

        benchPressBox.setText("Bench press");
        jPanel3.add(benchPressBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, -1));

        deadLiftBox.setText("Dead Lift");
        deadLiftBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deadLiftBoxActionPerformed(evt);
            }
        });
        jPanel3.add(deadLiftBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 79, -1));

        trainingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medium training", "Light training", "Heavy training", "Stamina training", "SPA" }));
        jPanel3.add(trainingComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 150, -1));

        timeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeTxtActionPerformed(evt);
            }
        });
        timeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timeTxtKeyPressed(evt);
            }
        });
        jPanel3.add(timeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 186, 93, -1));

        priceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTxtActionPerformed(evt);
            }
        });
        priceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTxtKeyPressed(evt);
            }
        });
        jPanel3.add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 223, 93, -1));

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel3.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 60, -1));

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel3.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 230, -1, -1));

        saunaBox.setText("Sauna");
        saunaBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saunaBoxActionPerformed(evt);
            }
        });
        jPanel3.add(saunaBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 79, -1));

        tradeMillBox.setText("Trademill");
        tradeMillBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeMillBoxActionPerformed(evt);
            }
        });
        jPanel3.add(tradeMillBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 79, -1));

        barBellBox.setText("Bar bell");
        barBellBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barBellBoxActionPerformed(evt);
            }
        });
        jPanel3.add(barBellBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 140, 79, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/aa.jpg"))); // NOI18N
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 270));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 800, 270));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/kll.jpg"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, 0, 890, 590));

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Downloads\\aa.jpg")); // NOI18N
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 800, 260));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jMenu1.setText("File");

        openMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/file (1).png"))); // NOI18N
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        exitMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/exit.png"))); // NOI18N
        exitMenu.setText("Exit");
        exitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMenuMouseClicked(evt);
            }
        });
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        exitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exitMenuKeyPressed(evt);
            }
        });
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/help-web-button.png"))); // NOI18N
        jMenu3.setText("Help");

        guideMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/instruction (1).png"))); // NOI18N
        guideMenu.setText("Guide");
        guideMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideMenuActionPerformed(evt);
            }
        });
        jMenu3.add(guideMenu);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void productComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productComboBoxActionPerformed

    private void productSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productSearchBtnActionPerformed
        // TODO add your handling code here:

        ArrayList<String> rowSelected = new ArrayList<>();

        String product = (productComboBox.getSelectedItem()).toString().toLowerCase();
        int totalCol = jTable1.getColumnCount();
        boolean empty = false;
        int nextRow = 0;
        String value;
        do {
            value = (String) jTable1.getValueAt(nextRow, 0); // the value is converted into string.
            if (value != null && value.length() != 0) {
                nextRow++;
            } else {
                empty = true;
            }
        } while (!empty);

        for (int i = 0; i < nextRow; i++) {
            if (product.equals(jTable1.getValueAt(i, 2).toString().toLowerCase())) {
                rowSelected.add(jTable1.getValueAt(i, 0).toString());

                rowSelected.add("\n");
            }

        }

        String[] item = (rowSelected.toArray(new String[rowSelected.size()]));

        //item = Arrays.toString(item).trim().split(",");
        JOptionPane.showMessageDialog(null, "Names of person who took " + product + ":" + "\n" + "" + Arrays.toString(item).replace("[", "").replace("]", "").replace(",", ""));


    }//GEN-LAST:event_productSearchBtnActionPerformed

    private void priceSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceSearchFocusGained
        // TODO add your handling code here: placeholder
        if (priceSearch.getText().equals("price")) {
            priceSearch.setText("");
        }
    }//GEN-LAST:event_priceSearchFocusGained

    private void priceSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceSearchFocusLost
        // TODO add your handling code here:placeholder
        if (priceSearch.getText().equals("")) {
            priceSearch.setText("price");
        }
    }//GEN-LAST:event_priceSearchFocusLost

    private void priceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceSearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new homePage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtActionPerformed

    private void nameTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTxtKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (Character.isLetter(a) || Character.isWhitespace(a) || Character.isISOControl(a)) { // isISOcontrol is for deleting key and backspace premission.
            nameTxt.setEditable(true);
        } else {
            nameTxt.setEditable(false);
        }
    }//GEN-LAST:event_nameTxtKeyPressed

    private void MradioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MradioBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MradioBtnActionPerformed

    private void FradioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FradioBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FradioBtnActionPerformed

    private void pushUpBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pushUpBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pushUpBoxMouseClicked

    private void deadLiftBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deadLiftBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deadLiftBoxActionPerformed

    private void timeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeTxtActionPerformed

    private void timeTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTxtKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(a > 47 && a < 58 || a == 8)) {
            timeTxt.setEditable(false);
        } else {
            timeTxt.setEditable(true);
        }
    }//GEN-LAST:event_timeTxtKeyPressed

    private void priceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTxtActionPerformed

    private void priceTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTxtKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(a > 47 && a < 58 || a == 8)) {    // the number code starts from 48 to 57 which represents number from 0 to 9.
            priceTxt.setEditable(false);
        } else {
            priceTxt.setEditable(true);
        }
    }//GEN-LAST:event_priceTxtKeyPressed

    @SuppressWarnings("empty-statement")
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<String> box = new ArrayList<>();
        String[] item;
        String name = nameTxt.getText();
        String comboBox = trainingComboBox.getSelectedItem().toString();
        String gender = null;
        boolean check = true;
        // array
        if (nameTxt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please type your name");
        } else if ((MradioBtn.isSelected() == false) && (FradioBtn.isSelected() == false)) {
            JOptionPane.showMessageDialog(null, "Please select your Gender");
        } else if ((saunaBox.isSelected() || tradeMillBox.isSelected() || barBellBox.isSelected() || deadLiftBox.isSelected() || pushUpBox.isSelected() || dumbBellBox.isSelected() || benchPressBox.isSelected()) == false) {
            JOptionPane.showMessageDialog(null, "Please select the items");
        } else {
            if (tradeMillBox.isSelected()) {
                box.add(tradeMillBox.getText());
            } else {
                box.remove(tradeMillBox.getText());
            }
            if (barBellBox.isSelected()) {
                box.add(barBellBox.getText());
            } else {
                box.remove(barBellBox.getText());
            }
            if (deadLiftBox.isSelected()) {
                box.add(deadLiftBox.getText());
            } else {
                box.remove(deadLiftBox.getText());
            }
            if (pushUpBox.isSelected()) {
                box.add(pushUpBox.getText());
            } else {
                box.remove(pushUpBox.getText());
            }
            if (dumbBellBox.isSelected()) {
                box.add(dumbBellBox.getText());
            } else {
                box.remove(dumbBellBox.getText());
            }
            if (benchPressBox.isSelected()) {
                box.add(benchPressBox.getText());
            } else {
                box.remove(benchPressBox.getText());
            }
            item = box.toArray(new String[box.size()]);    // converting arraylist into array. 
            if (box.size() >= 4) {  // it is to only restrict for 3 items.
                JOptionPane.showMessageDialog(null, "Please select only three item");
                box.clear();

            } else if (timeTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please type the Time");
            } else if (priceTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please type the price");

            } else {

                if (MradioBtn.isSelected() == true) {
                    gender = MradioBtn.getText();
                } else {
                    gender = FradioBtn.getText();
                }
                String time = timeTxt.getText();
                String price = priceTxt.getText();

                String data[] = {name, gender, comboBox, Arrays.toString(item).replace("[", "").replace("]", ""), time, price};
                int totalCol = jTable1.getColumnCount();
                boolean empty = false;
                int nextRow = 0;
                String value;
                do {
                    value = (String) jTable1.getValueAt(nextRow, 0); // the value is converted into string.
                    if (value != null && value.length() != 0) {
                        nextRow++;
                    } else {
                        empty = true;
                    }
                } while (!empty);

                if (check == true) {

                    for (int j = 0; j < nextRow; j++) {

                        if (name.toLowerCase().equals(jTable1.getValueAt(j, 0).toString().toLowerCase())) {
                            JOptionPane.showMessageDialog(null, "Repeatation of the name");
                            check = false;
                        }

                    }

                }
                if (check == true) {
                    for (int i = 0; i < totalCol; i++) {
                        jTable1.setValueAt(data[i], nextRow, i);
                    }
                    JOptionPane.showMessageDialog(null, "Your information is added");

                }

            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        nameTxt.setText("");
        timeTxt.setText("");
        priceTxt.setText("");
        pushUpBox.setSelected(false);
        dumbBellBox.setSelected(false);
        benchPressBox.setSelected(false);
        deadLiftBox.setSelected(false);
        saunaBox.setSelected(false);
        tradeMillBox.setSelected(false);
        barBellBox.setSelected(false);
        buttonGroup1.clearSelection();
        trainingComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void saunaBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saunaBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saunaBoxActionPerformed

    private void tradeMillBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeMillBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeMillBoxActionPerformed

    private void barBellBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barBellBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barBellBoxActionPerformed

    private void exitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuMouseClicked

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_exitMenuActionPerformed

    private void exitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exitMenuKeyPressed

    }//GEN-LAST:event_exitMenuKeyPressed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here: to add information from the notepad.
        BufferedReader b = null;
        String line;
        int totalCol = jTable1.getColumnCount();
        boolean empty = false;
        int nextRow = 0;
        String value;

        try {
            String file[] = null; // array
            b = new BufferedReader(new FileReader("src/files/openfile.txt")); // open the txt file.
            while ((line = b.readLine()) != null) {    // line is a string variable ...readlines() serach...[bddskadj]

                file = line.split(","); // split research.. its impact on file // it separate string with comma which gets store in the file. 

                do {
                    value = (String) jTable1.getValueAt(nextRow, 0); // the value is converted into string.
                    if (value != null && value.length() != 0) {
                        nextRow++; // total number of row present
                    } else {
                        empty = true;
                    }
                } while (!empty);
                for (int i = 0; i < totalCol; i++) {
                    jTable1.setValueAt((file[i].replace("-", ",")), nextRow, i);
                }
            }
            JOptionPane.showMessageDialog(null, "The information is added");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Please try again");
        }
    }//GEN-LAST:event_openMenuActionPerformed

    private void guideMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideMenuActionPerformed
        // TODO add your handling code here:
        try {
            //RUNDLL32 is a program that runs 32 bit DLL
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "D:\\second year\\java\\Group_CourseWork\\GYMWORKOUT.pdf");

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Please try again");

        }
    }//GEN-LAST:event_guideMenuActionPerformed

    private void priceSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchBtnActionPerformed
        // TODO add your handling code here: binary search algorithm.

        String price = priceSearch.getText(); // 2000

        if (!price.equals(" ") && !price.equals("price")) {

            int col = jTable1.getColumnCount();
            int rowCount = 0;
            boolean empty = false;
            String value;

            // count the total no of row present.
            do {
                value = (String) jTable1.getValueAt(rowCount, 0); // the value is converted into string.
                if (value != null && value.length() != 0) {
                    rowCount++; //5  //8
                } else {
                    empty = true;
                }
            } while (!empty);

            // all the price is obtain in arraylist Allprice.
            ArrayList<String> Allprice = new ArrayList<>();
            for (int i = 0; i < rowCount; i++) {
                Allprice.add((jTable1.getValueAt(i, 5)).toString());
            }

            ArrayList sortedList = Sorting.sort(Allprice); // selection sorting String Allprice  //sorted value is returned to sortedlist

            int indexofpriceselected = binaryAlgorithm.value(sortedList, price); // binary search algorithm // index nunber of price entered.

            String binarypriceselected = sortedList.get(indexofpriceselected).toString(); // price is stored from the sorted list for comparing.

            // code for first row of price entered and displaying the name of the person for doing particular training session.
            if (indexofpriceselected <= 0) {
                JOptionPane.showMessageDialog(null, "Please enter correct value");

            } else {
                ArrayList<String> rowSelected = new ArrayList<>();

                for (int i = 0; i <= rowCount; i++) {

                    if (price.equals(jTable1.getValueAt(i, 5).toString()) && price.equals(binarypriceselected)) { // price = enter price from the textfield
                        for (int j = 0; j < col; j++) {
                            rowSelected.add(jTable1.getValueAt(i, 3).toString());
                            break;
                        }
                        break;
                    }
                }
                JOptionPane.showMessageDialog(null, "The items are :" + "\n" + rowSelected.toString().replaceAll("(^\\[|\\]$)", ""));
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter the price");
        }

    }//GEN-LAST:event_priceSearchBtnActionPerformed

    private void priceSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceSearchKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(a > 47 && a < 58 || a == 8)) {    // the number code starts from 48 to 57 which represents number from 0 to 9.
            priceSearch.setEditable(false);
        } else {
            priceSearch.setEditable(true);
        }
    }//GEN-LAST:event_priceSearchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(informationAdd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(informationAdd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(informationAdd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(informationAdd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new informationAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton FradioBtn;
    private javax.swing.JRadioButton MradioBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JCheckBox barBellBox;
    private javax.swing.JCheckBox benchPressBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearBtn;
    private javax.swing.JCheckBox deadLiftBox;
    private javax.swing.JCheckBox dumbBellBox;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenuItem guideMenu;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JTextField priceSearch;
    private javax.swing.JButton priceSearchBtn;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JComboBox<String> productComboBox;
    private javax.swing.JButton productSearchBtn;
    private javax.swing.JCheckBox pushUpBox;
    private javax.swing.JCheckBox saunaBox;
    private javax.swing.JTextField timeTxt;
    private javax.swing.JCheckBox tradeMillBox;
    private javax.swing.JComboBox<String> trainingComboBox;
    // End of variables declaration//GEN-END:variables

}
